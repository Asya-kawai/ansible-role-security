- name: Install OS packages for Debian
  package:
    name:
      - clamav
      - clamav-daemon
      - clamdscan
      - clamtk
      - mailutils
    state: latest
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - security
    - clamav
    - webserver

- name: Install OS packages for CentOS
  package:
    name:
      - clamav
      - clamav-data
      - clamav-devel
      - clamav-filesystem
      - clamav-update
      - clamd
      - mailx
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - security
    - clamav
    - webserver

- name: Config freshclam for Debian
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/clamav/{{ item }}.j2"
    dest: "/etc/clamav/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
     - freshclam.conf
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - security
    - clamav
    - webserver

- name: Config freshclam for CentOS
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/{{ item }}.j2"
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
     - freshclam.conf
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - security
    - clamav
    - webserver

- name: Update clamav pattern file by freshclam
  command: freshclam
  register: freshclam_result
  when:
    - clamav.freshclam | default(true)
  tags:
    - security
    - clamav
    - webserver

- name: Start and enable clamav service for Debian
  systemd:
    name: clamav-daemon
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'Debian'
    - freshclam_result is succeeded
  tags:
    - security
    - clamav
    - webserver

- name: Start and enable clamav service for CentOS
  systemd:
    name: clamd@scan
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - freshclam_result is succeeded
  tags:
    - security
    - clamav
    - webserver

- name: Start and enable freshclam service for Debian
  systemd:
    name: clamav-freshclam
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'Debian'
    - freshclam_result is succeeded
  tags:
    - security
    - clamav
    - webserver

- name: Start and enable freshclam service for CentOS
  systemd:
    name: clamav-freshclam
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - freshclam_result is succeeded
  tags:
    - security
    - clamav
    - webserver

- name: Config clamdscan for Debian
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/clamav/{{ item }}.j2"
    dest: "/etc/clamav/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
     - clamd.conf
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - security
    - clamav
    - webserver

- name: Config clamdscan for CentOS
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/clamd.d/{{ item }}.j2"
    dest: "/etc/clamd.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
     - scan.conf
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - security
    - clamav
    - webserver

- name: Create /opt directory
  file:
    path: "/opt"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - security
    - clamav
    - webserver

- name: Create /opt/bin directory
  file:
    path: "/opt/bin"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - security
    - clamav
    - webserver

- name: Create log directory stored by full scan script
  file:
    path: "/var/log/clamav"
    state: directory
    owner: "{{ clamav.user }}"
    group: "{{ clamav.group }}"
    mode: 0755
  tags:
    - security
    - clamav
    - webserver

- name: Create virus evacuation directory stored by full scan script
  file:
    path: "/var/log/clamav/virus"
    state: directory
    owner: "{{ clamav.user }}"
    group: "{{ clamav.group }}"
    mode: 0755
  tags:
    - security
    - clamav
    - webserver

- name: Create clamd full scan script
  template:
    src: "{{ item }}.j2"
    dest: "/opt/bin/{{ item }}"
  with_items:
    - clamd-fullscan.sh
  tags:
    - security
    - clamav
    - webserver
