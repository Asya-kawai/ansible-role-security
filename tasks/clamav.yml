---
- name: Install OS packages for Debian
  package:
    name:
      - clamav
      - clamav-daemon
      - clamdscan
      - clamtk
      - mailutils
    state: latest
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - clamav-install-os-packages

- name: Install OS packages for CentOS
  package:
    name:
      - clamav
      - clamav-data
      - clamav-devel
      - clamav-filesystem
      - clamav-update
      - clamd
      - mailx
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - clamav-install-os-packages

- name: Configure freshclam for Debian
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/clamav/{{ item }}.j2"
    dest: "/etc/clamav/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - freshclam.conf
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - clamav-configure-freshclam

- name: Configure freshclam for CentOS
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/{{ item }}.j2"
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - freshclam.conf
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - clamav-configure-freshclam

- name: Update clamav pattern file by freshclam
  command: freshclam
  register: freshclam_result
  when:
    - clamav_freshclam | default(true)
  changed_when: false
  tags:
    - clamav-freshclam

- name: Start and enable clamav service for Debian
  systemd:
    name: clamav-daemon
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'Debian'
    - freshclam_result is defined
    - freshclam_result is succeeded
    - not ansible_check_mode
  tags:
    - clamav-start-service

- name: Start and enable clamav service for CentOS
  systemd:
    name: clamd@scan
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - freshclam_result is defined
    - freshclam_result is succeeded
    - not ansible_check_mode
  tags:
    - clamav-start-service

- name: Start and enable freshclam service for Debian
  systemd:
    name: clamav-freshclam
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'Debian'
    - freshclam_result is defined
    - freshclam_result is succeeded
    - not ansible_check_mode
  tags:
    - clamav-start-freshclam

- name: Start and enable freshclam service for CentOS
  systemd:
    name: clamav-freshclam
    state: started
    enabled: yes
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - freshclam_result is defined
    - freshclam_result is succeeded
    - not ansible_check_mode
  tags:
    - clamav-start-freshclam

- name: Configure clamdscan for Debian
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/clamav/{{ item }}.j2"
    dest: "/etc/clamav/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - clamd.conf
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - clamav-configure-clamdscan

- name: Configure clamdscan for CentOS
  template:
    src: "{{ ansible_facts['os_family'] }}/etc/clamd.d/{{ item }}.j2"
    dest: "/etc/clamd.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - scan.conf
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - clamav-configure-clamdscan

- name: Allow antivirus to scan the system for CentOS
  command: setsebool -P antivirus_can_scan_system on
  when: ansible_facts['os_family'] == 'RedHat'
  changed_when: false
  tags:
    - clamav-selinux-allow-system-scan

- name: Create script directory
  file:
    path: "{{ clamav_script_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - clamav-create-script-directory

- name: Create log directory stored by full scan script
  file:
    path: "{{ clamav_log_dir }}"
    state: directory
    owner: "{{ clamav_user | trim }}"
    group: "{{ clamav_group | trim }}"
    mode: 0755
  tags:
    - clamav-create-log-directory

- name: Create virus evacuation directory stored by full scan script
  file:
    path: "{{ clamav_virus_evacuation_dir }}"
    state: directory
    owner: "{{ clamav_user | trim }}"
    group: "{{ clamav_group | trim }}"
    mode: 0755
  tags:
    - clamav-create-virus-evacuation-directory

- name: Create clamd full scan script
  template:
    src: "{{ item.lstrip('/') }}.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items: "{{ clamav_clamd_fullscan_path }}"
  tags:
    - clamav-create-clamd-fullscan-script

- name: Create clamd full scan services
  template:
    src: "{{ item.lstrip('/') }}.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{ clamav_clamd_fullscan_service_path }}"
    - "{{ clamav_clamd_fullscan_timer_path }}"
  tags:
    - clamav-create-clamd-fullscan-services

- name: Check clamd full scan timer exists
  stat:
    path: "{{ clamav_clamd_fullscan_timer_path }}"
  register: clamav_clamd_fullscan_timer_path_result
  tags:
    - clamav-check-clamd-fullscan-timer

- name: Enable clamd full scan timer
  systemd:
    name: "{{ clamav_clamd_fullscan_timer_name }}"
    state: started
    enabled: true
    daemon-reload: true
  when: clamav_clamd_fullscan_timer_path_result.stat.exists
  tags:
    - clamav-enable-clamd-fullscan-timer
